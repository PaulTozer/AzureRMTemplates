{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    
        "imageReference": {
            "type": "string"    
        },
        "subnetName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
         "virtualMachineNamePrefix": {  
            "type": "string",
            "maxLength": 13,
            "metadata": {
                "description": "Name of the virtual machine to be created"
            }
        },
        "virtualMachineCount": {
        "type": "int",
        "metadata": {
            "description": "Number of  virtual machines to be created"
            }
        },
        "virtualMachineSize": {
            "defaultValue": "Standard_D8as_v4",
            "type": "string"
        },
        "availabilitySetName": {
            "type": "string"
        },
        "LocalAdminUsername": {
            "type": "string"
        },
        "LocalAdminPassword": {
            "type": "secureString"
        },
        "domainJoinUserName": {
            "type": "string",
            "metadata": {
                "description": "Domain NetBiosName plus User name of a domain user with sufficient rights to perfom domain join operation. E.g. domain\\username"
            }
        },
        "domainJoinUserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Domain user password"
            }
        },
        "domainFQDN": {
            "type": "string",
        "metadata": {
            "description": "Domain FQDN where the virtual machine will be joined"
            }
        },
        "ouPath": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
            "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
            }
        },
        "HostPoolName": {
            "type": "string"
        },
        "AzureADUserName": {
            "type": "string",
            "metadata": {
                "description": "Azure AD Username with Permission to Join WVD Host to HostPool"
            }
        },
        "AzureADPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Azure AD Password with Permission to Join WVD Host to HostPool"
            }
        }
    },
    "variables": {
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'),parameters('subnetName'))]",
        "domainJoinOptions": 3
    },
    "resources": [
        {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('availabilitySetName')]"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            },
            "sku":{
                "name": "Aligned"
            }
        },
        {
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '_Nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "copy": {
                "name": "NICCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '_Nic'))]"
            ],
            "copy": {
                "name": "VMcopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1),'_OSDisk')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "id": "[parameters('imageReference')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '_Nic'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
                    "adminUsername": "[parameters('LocalAdminUsername')]",
                    "adminPassword": "[parameters('LocalAdminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "licenseType": "Windows_Client",
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },  
        
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineNamePrefix'), copyIndex(1)))]"
            ],
            "copy": {
                "name": "DomainJoinCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
            "settings": {
                "Name": "[parameters('domainFQDN')]",
                "User": "[parameters('domainJoinUserName')]",
                "Restart": "true",
                "Options": "[variables('domainJoinOptions')]",
                "OUPath": "[parameters('ouPath')]"
            },
            "protectedSettings": {
                "Password": "[parameters('domainJoinUserPassword')]"
        }
      }
    },
        
        {
        
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '/PSExtensionInstall')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('virtualMachineNamePrefix'), copyIndex(1),'/joindomain'))]"
            ],
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "WVDCopy",
                "count": "[parameters('virtualMachineCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion":true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/PaulTozer/AzureRMTemplates/master/WVD/BuildSessionHostsFromImage/InstallWVDAgents/InstallWVDAgents.ps1" 
                    ],
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File InstallWVDAgents.ps1 -HostPoolName ', parameters('HostPoolName'),' -Username ',parameters('AzureADUserName'),' -Password ', parameters('AzureADPassword'), ' -ResourceGroupName ', resourceGroup().name)]"
            }
        }
    }    
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('LocalAdminUsername')]"
        }
    }
}
